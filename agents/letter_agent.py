# LetterAgent - Generates formal legal complaint letters
import os
from typing import Dict
from langchain_nvidia_ai_endpoints import ChatNVIDIA

class LetterAgent:
    def __init__(self):
        # Give the agent a name
        self.name = "LetterAgent"
        
        # Get API key from environment
        api_key = os.getenv("NVIDIA_API_KEY")
        if not api_key:
            raise ValueError("NVIDIA_API_KEY not found in environment variables")
        
        # Initialize NVIDIA LLM - this is our connection to the AI
        self.llm = ChatNVIDIA(
            model="meta/llama-3.1-70b-instruct",
            api_key=api_key,
            temperature=0.2  # Slightly higher for more natural letter writing
        )
        
        print(f"{self.name} initialized with NVIDIA LLM!")
    
    def generate_complaint_letter(self, analysis_data: Dict, tenant_info: Dict) -> Dict:
        """
        Uses NVIDIA LLM to generate formal complaint letter
        """
        print(f"\n{self.name} generating complaint letter with NVIDIA AI...")
        
        # Build the prompt for letter generation
        prompt = f"""You are a professional legal document writer specializing in tenant rights.

Generate a formal complaint letter based on this analysis:

ANALYSIS: {analysis_data.get('analysis', 'No analysis provided')}

TENANT INFORMATION:
- Name: {tenant_info.get('name', 'Tenant Name')}
- Address: {tenant_info.get('address', 'Property Address')}
- Landlord: {tenant_info.get('landlord', 'Landlord Name')}
- Date of Issue: {tenant_info.get('date', 'Date of Issue')}

Generate a professional complaint letter that:
1. Uses formal business letter format
2. States the facts clearly and objectively
3. References relevant NYC laws and statutes
4. Requests specific remedial action
5. Sets a reasonable deadline for response
6. Maintains professional tone throughout

Do not provide legal advice. Focus on documenting the issues and requesting resolution.

Begin with proper letter formatting including date, addresses, and "Re:" subject line."""

        # Call NVIDIA LLM to generate the letter
        response = self.llm.invoke(prompt)
        
        # Return the generated letter
        return {
            "letter_content": response.content,
            "generated_by": "NVIDIA Llama 3.1 70B",
            "letter_type": "Tenant Complaint Letter"
        }

# Test the agent
if __name__ == "__main__":
    # Test data
    test_analysis = {
        "analysis": "Legitimate issue found: Landlord violated NYC Admin Code by entering without proper notice"
    }
    
    test_tenant_info = {
        "name": "John Doe",
        "address": "123 Main St, New York, NY 10001",
        "landlord": "ABC Property Management",
        "date": "January 15, 2024"
    }
    
    try:
        agent = LetterAgent()
        result = agent.generate_complaint_letter(test_analysis, test_tenant_info)
        
        print("\n--- Generated Letter ---")
        print(result["letter_content"][:500] + "...")  # First 500 characters
        print(f"\nGenerated by: {result['generated_by']}")
        
    except ValueError as e:
        print(f"Error: {e}")
        print("Note: Set NVIDIA_API_KEY environment variable to test")